name: Run linter and tests

on:
  push:
    branches: [master, main]
  pull_request:
    branches: [master, main]

env:
  PYTHON_DEFAULT_VERSION: "3.11"
  ENV_FILL_MISSING_VALUES: 1

jobs:
{%- if cookiecutter.ci_use_linter == "y" %}
  linter:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Python {% raw %}${{ env.PYTHON_DEFAULT_VERSION }}{% endraw %}
        uses: actions/setup-python@v4
        with:
          python-version: {% raw %}${{ env.PYTHON_DEFAULT_VERSION }}{% endraw %}
      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          version: "0.5.x"
      - name: Install nox
        run: python -m pip install --upgrade nox
      - name: Run linters
        run: nox -vs lint
{%- endif %}
  test:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Python {% raw %}${{ env.PYTHON_DEFAULT_VERSION }}{% endraw %}
        uses: actions/setup-python@v4
        with:
          python-version: {% raw %}${{ env.PYTHON_DEFAULT_VERSION }}{% endraw %}
      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          version: "0.5.x"
      - name: Prepare environment
        run: ./setup-dev.sh
      - name: Run dockerized services
        run: docker compose up -d --wait
      - name: Run migrations
        run: cd app/src && uv run python manage.py wait_for_database --timeout 120 && uv run python manage.py migrate
      - name: Install nox
        run: python -m pip install --upgrade nox
      - name: Run unit tests
        run: nox -vs test
      - name: Stop dockerized services
        if: success() || failure()
        run: docker compose down -v
